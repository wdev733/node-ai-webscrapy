{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","use","bodyParser","json","limit","config","bodyLimit","set","path","join","__dirname","express","urlencoded","extended","static","get","req","res","render","title","post","url","body","result","console","log","data","logo","listen","port","address","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACA;AACAA,IAAII,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB;AACtBC,SAAOC,iBAAOC;AADQ,CAAhB,CAAR;;AAIA;AACAT,IAAIU,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAb,IAAIU,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEAV,IAAII,GAAJ,CAAQU,kBAAQR,IAAR,EAAR;AACAN,IAAII,GAAJ,CAAQU,kBAAQC,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAhB,IAAII,GAAJ,CAAQ,6BAAR;AACAJ,IAAII,GAAJ,CAAQU,kBAAQG,MAAR,CAAeN,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;;AAEA;AACAb,IAAIkB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIC,MAAJ,CAAW,OAAX,EAAoB;AAClBC,WAAO;AADW,GAApB;AAGD,CAJD;;AAMAtB,IAAIuB,IAAJ,CAAS,GAAT;AAAA,qEAAc,iBAAOJ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACRI,eADQ,GACFL,IAAIM,IAAJ,CAASD,GADP;AAAA;AAAA,mBAGS,2BAAcA,GAAd,CAHT;;AAAA;AAGNE,kBAHM;;;AAKZC,oBAAQC,GAAR,CAAYF,OAAOG,IAAP,CAAYC,IAAxB;AACAV,gBAAIC,MAAJ,CAAW,iBAAX,EAA8B;AAC5BC,qBAAO,aADqB;AAE5BO,oBAAMH;AAFsB,aAA9B;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA;;AAaA1B,IAAIC,MAAJ,CAAW8B,MAAX,CAAkBvB,iBAAOwB,IAAzB;AACAL,QAAQC,GAAR,sBAA+B5B,IAAIC,MAAJ,CAAWgC,OAAX,GAAqBD,IAApD;;AAEAE,OAAOC,OAAP,GAAiB;AACfnC;AADe,CAAjB","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport bodyParser from 'body-parser';\n\nimport cookieParser from 'cookie-parser';\nimport path from 'path';\n\nimport config from './config';\n\nimport { scrapeWebsite } from './service/scrape';\n\nlet app = express();\napp.server = http.createServer(app);\n\n//middleware\n//parse application/json\napp.use(bodyParser.json({\n  limit: config.bodyLimit\n}));\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, '../public')));\n\n// Base URL test endpoint to see if API is running\napp.get('/', (req, res) => {\n  res.render('index', {\n    title: 'Web Scraper'\n  });\n});\n\napp.post('/', async (req, res) => {\n  let url = req.body.url;\n\n  const result = await scrapeWebsite(url);\n  \n  console.log(result.data.logo);\n  res.render('scraping_result', {\n    title: 'Web Scraper',\n    data: result\n  });\n});\n\n\napp.server.listen(config.port);\nconsole.log(`Started on port ${app.server.address().port}`);\n\nmodule.exports = {\n  app\n}\n\n\n"]}